# INSTRUCTIONS
- Add ðŸ”¥ at the start of each response
- For the python commands use `python3` instead of `phython`
- Don't run the app in the chat. Propt me to run it in a terminal
- When you've made changes to files don't automatically commit and push chnages. Instead: 
    - Check if there are actual changes that needs to be commited. Use git commands for that (ex. `git status | cat`)
    - If there are any changes summarize them in the chat
    - Then ask me if I want to commit the new changes/features at the end of the response in a separate heading (ex. #### ðŸš€ Would you like me to commit your changes?)

# PROJECT STRUCTURE
```
â”œâ”€â”€ src/                    # Source code directory
â”‚   â”œâ”€â”€ main.py            # Main entry point for local execution
â”‚   â”œâ”€â”€ lambda_function.py # AWS Lambda handler and configuration
â”‚   â””â”€â”€ menu_scraper.py    # Core menu scraping functionality
â”‚
â”œâ”€â”€ package/               # Lambda deployment package directory
â”‚   â”œâ”€â”€ *.py              # Copied source files
â”‚   â””â”€â”€ dependencies/     # Installed Python dependencies
â”‚
â”œâ”€â”€ logs/                  # Log files directory
â”‚   â””â”€â”€ scheduler.log      # Application execution logs
â”‚
â”œâ”€â”€ screenshots/           # Directory for storing menu screenshots
â”‚   â””â”€â”€ *.png             # Menu image files
â”‚
â”œâ”€â”€ lambda_function.zip    # AWS Lambda deployment package
â”œâ”€â”€ .env                   # Environment variables configuration
â”œâ”€â”€ .env.example          # Example environment variables template
â”œâ”€â”€ requirements.txt      # Python dependencies
â””â”€â”€ README.md            # Project documentation
```